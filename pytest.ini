[tool:pytest]
addopts = -v --tb=short --strict-markers --cov=src --cov-report=term-missing --cov-report=html --cov-report=xml --cov-fail-under=90
testpaths = src/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
markers =
    unit: Unit tests
    integration: Integration tests
    api: API tests
    slow: Slow running tests
    performance: Performance tests
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    ignore:The 'app' shortcut is now deprecated:DeprecationWarning
    ignore:Use 'content=<...>' to upload raw bytes/text content:UserWarning
    ignore:Features .* are constant:UserWarning
    ignore:invalid value encountered in divide:RuntimeWarning
    ignore:Precision loss occurred in moment calculation:UserWarning
    ignore:X has feature names, but .* was fitted without feature names:UserWarning
minversion = 6.0

[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    setup.py
    conftest.py
    */migrations/*
    */venv/*
    */env/*
    */.venv/*
    */.env/*
    __pycache__
    *.egg-info
    .pytest_cache
    venv
    env
    .venv
    .env
    node_modules

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# Coverage settings (when using pytest-cov)
# These can be overridden by command line options
# --cov=src --cov-report=html --cov-report=term-missing

# Parallel execution settings (when using pytest-xdist)
# Use with: pytest -n auto

# HTML report settings (when using pytest-html)
# Use with: pytest --html=report.html --self-contained-html

# JUnit XML settings (for CI/CD integration)
# Use with: pytest --junitxml=junit.xml
junit_suite_name = bank_churn_analysis
junit_logging = all
junit_log_passing_tests = true
junit_duration_report = total

# Cache settings
cache_dir = .pytest_cache

# Test collection
collect_ignore = [
    "setup.py",
    "build",
    "dist",
    ".git",
    ".tox",
    __pycache__
    *.egg-info
    .pytest_cache
    venv
    env
    .venv
    .env
    node_modules

# Doctest settings
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS
doctest_ignore_import_errors = true

# Test session settings
norecursedirs = .git .tox dist build *.egg .pytest_cache venv env .venv .env

# Custom test result summary
console_output_style = progress

# Fail on collection errors
# This ensures that import errors in test files cause the test run to fail
# rather than silently skipping tests